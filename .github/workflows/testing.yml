name: Tests
on:
  push:
    branches: [ 3.0.x ]
  pull_request:
    branches: [ 3.0.x ]
jobs:
  drupal:
    name: Drupal ${{ matrix.drupal-core }} (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-20.04
    env:
      extensions: mbstring, xml, pdo_sqlite, gd, opcache
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0']
        drupal-core: ['9.2.x']
        include:
          # Extra run to also test on latest Drupal 8 and PHP 7.2.
          - php-versions: '7.2'
            drupal-core: '8.9.x'
    steps:
      - run: echo "${{ env.extensions }}"
      - name: Checkout Drupal core
        uses: actions/checkout@v2
        with:
          repository: drupal/drupal
          ref: ${{ matrix.drupal-core }}

      - name: Setup PHP extension cache
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          # Ideally this would be based on env.extensions, how can we make a
          # hash out of that?
          key: cache-v1

      - name: Cache PHP extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          # Disable Xdebug for better performance.
          coverage: none
          extensions: ${{ env.extensions }}
          ini-values: opcache.enable_cli=1

      - name: Get composer cache directory
        id: composercache
        run: |
          composer config allow-plugins true -n
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Drupal core dependencies
        run: |
          composer config allow-plugins true -n
          composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
          composer --no-interaction run-script drupal-phpunit-upgrade

      - name: Install dependencies
        run: |
          composer config allow-plugins true -n
          composer --no-interaction --no-progress require \
          phpstan/phpstan:^0.12.88 \
          mglaman/phpstan-drupal:^0.12.8 \
          phpstan/phpstan-deprecation-rules:^0.12.2 \
          jangregor/phpstan-prophecy:^0.8 \
          phpstan/phpstan-phpunit:^0.12

      # We install Coder separately because updating did not work in the local
      # Drupal vendor dir.
      - name: Install Coder
        run: |
          mkdir -p coder
          cd coder
          composer init --name=coder/coder --no-interaction
          composer config allow-plugins true -n
          composer require drupal/coder:8.3.12 --no-interaction --no-progress

      # There are issues with act to include checkout inside checkout.
      - name: Sets composer github token
        run: |
          composer config -g github-oauth.github.com ${{ github.token }}

      - name: Install tawk_to module
        run: |
          composer config repositories.tawk_to vcs https://github.com/akhomy/tawk_to
          composer require drupal/tawk_to:3.0.x

      - name: Run PHPStan
        run: |
          cp modules/contrib/tawk_to/phpstan.neon ./
          ./vendor/bin/phpstan analyse modules/contrib/tawk_to

      - name: Run PHPCS
        run: |
          ./coder/vendor/bin/phpcs --config-set installed_paths ../../drupal/coder/coder_sniffer
          ./coder/vendor/bin/phpcs --standard=Drupal,DrupalPractice -p modules/contrib/tawk_to
